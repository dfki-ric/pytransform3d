
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/visualizations/vis_moving_urdf_with_meshes.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_visualizations_vis_moving_urdf_with_meshes.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_visualizations_vis_moving_urdf_with_meshes.py:


=========================
Animated URDF with Meshes
=========================

This example shows how to load a URDF with STL meshes and animate it.
This example must be run from within the examples folder or the main
folder because it uses a hard-coded path to the URDF file and the meshes.

.. GENERATED FROM PYTHON SOURCE LINES 10-55



.. image-sg:: /_auto_examples/visualizations/images/sphx_glr_vis_moving_urdf_with_meshes_001.png
   :alt: vis moving urdf with meshes
   :srcset: /_auto_examples/visualizations/images/sphx_glr_vis_moving_urdf_with_meshes_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    import os

    import numpy as np

    import pytransform3d.visualizer as pv
    from pytransform3d.urdf import UrdfTransformManager


    def animation_callback(step, n_frames, tm, graph):
        angle = 2.79253 * np.sin(2.0 * np.pi * (step / n_frames))
        tm.set_joint("joint", angle)
        graph.set_data()
        return graph


    BASE_DIR = "test/test_data/"
    data_dir = BASE_DIR
    search_path = "."
    while (
        not os.path.exists(data_dir)
        and os.path.dirname(search_path) != "pytransform3d"
    ):
        search_path = os.path.join(search_path, "..")
        data_dir = os.path.join(search_path, BASE_DIR)


    tm = UrdfTransformManager()
    with open(data_dir + "simple_mechanism.urdf", "r") as f:
        tm.load_urdf(f.read(), mesh_path=data_dir)

    fig = pv.figure("URDF with meshes")
    graph = fig.plot_graph(
        tm, "lower_cone", s=0.1, show_connections=True, show_visuals=True
    )
    fig.view_init()
    fig.set_zoom(1.2)
    n_frames = 100
    if "__file__" in globals():
        fig.animate(
            animation_callback, n_frames, loop=True, fargs=(n_frames, tm, graph)
        )
        fig.show()
    else:
        fig.save_image("__open3d_rendered_image.jpg")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.321 seconds)


.. _sphx_glr_download__auto_examples_visualizations_vis_moving_urdf_with_meshes.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: vis_moving_urdf_with_meshes.ipynb <vis_moving_urdf_with_meshes.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: vis_moving_urdf_with_meshes.py <vis_moving_urdf_with_meshes.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: vis_moving_urdf_with_meshes.zip <vis_moving_urdf_with_meshes.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
