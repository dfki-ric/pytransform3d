
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/visualizations/vis_moving_robot.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_visualizations_vis_moving_robot.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_visualizations_vis_moving_robot.py:


==============
Animated Robot
==============

In this example we animate a 6-DOF robot arm with cylindrical visuals.

.. GENERATED FROM PYTHON SOURCE LINES 8-51



.. image-sg:: /_auto_examples/visualizations/images/sphx_glr_vis_moving_robot_001.png
   :alt: vis moving robot
   :srcset: /_auto_examples/visualizations/images/sphx_glr_vis_moving_robot_001.png
   :class: sphx-glr-single-img





.. code-block:: Python

    import os
    import numpy as np
    from pytransform3d.urdf import UrdfTransformManager
    import pytransform3d.visualizer as pv


    def animation_callback(step, n_frames, tm, graph, joint_names):
        angle = 0.5 * np.cos(2.0 * np.pi * (step / n_frames))
        for joint_name in joint_names:
            tm.set_joint(joint_name, angle)
        graph.set_data()
        return graph


    BASE_DIR = "test/test_data/"
    data_dir = BASE_DIR
    search_path = "."
    while (not os.path.exists(data_dir) and
           os.path.dirname(search_path) != "pytransform3d"):
        search_path = os.path.join(search_path, "..")
        data_dir = os.path.join(search_path, BASE_DIR)

    tm = UrdfTransformManager()
    filename = os.path.join(data_dir, "robot_with_visuals.urdf")
    with open(filename, "r") as f:
        robot_urdf = f.read()
        tm.load_urdf(robot_urdf, mesh_path=data_dir)
    joint_names = ["joint%d" % i for i in range(1, 7)]
    for joint_name in joint_names:
        tm.set_joint(joint_name, 0.5)

    fig = pv.figure()
    graph = fig.plot_graph(
        tm, "robot_arm", s=0.1, show_frames=True, show_visuals=True)
    fig.view_init()
    fig.set_zoom(1.5)
    n_frames = 100
    if "__file__" in globals():
        fig.animate(animation_callback, n_frames, loop=True,
                    fargs=(n_frames, tm, graph, joint_names))
        fig.show()
    else:
        fig.save_image("__open3d_rendered_image.jpg")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.407 seconds)


.. _sphx_glr_download__auto_examples_visualizations_vis_moving_robot.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: vis_moving_robot.ipynb <vis_moving_robot.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: vis_moving_robot.py <vis_moving_robot.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: vis_moving_robot.zip <vis_moving_robot.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
