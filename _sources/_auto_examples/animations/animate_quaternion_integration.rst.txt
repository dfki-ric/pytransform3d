
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/animations/animate_quaternion_integration.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_animations_animate_quaternion_integration.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_animations_animate_quaternion_integration.py:


======================
Quaternion Integration
======================

Integrate angular accelerations to a quaternion sequence and animate it.

.. GENERATED FROM PYTHON SOURCE LINES 8-75



.. video:: /_auto_examples/animations/images/sphx_glr_animate_quaternion_integration_001.gif
   :class: sphx-glr-single-img
   :height: 300
   :width: 400
   :autoplay:
   :loop:






.. code-block:: Python

    import numpy as np
    import matplotlib.pyplot as plt
    from mpl_toolkits.mplot3d import axes3d
    import matplotlib.animation as animation
    from pytransform3d import rotations as pr


    def update_lines(step, Q, rot):
        R = pr.matrix_from_quaternion(Q[step])

        # Draw new frame
        rot[0].set_data(np.array([0, R[0, 0]]), [0, R[1, 0]])
        rot[0].set_3d_properties([0, R[2, 0]])

        rot[1].set_data(np.array([0, R[0, 1]]), [0, R[1, 1]])
        rot[1].set_3d_properties([0, R[2, 1]])

        rot[2].set_data(np.array([0, R[0, 2]]), [0, R[1, 2]])
        rot[2].set_3d_properties([0, R[2, 2]])

        return rot


    if __name__ == "__main__":
        rng = np.random.default_rng(3)
        start = pr.random_quaternion(rng)
        n_frames = 1000
        dt = 0.01
        angular_accelerations = np.empty((n_frames, 3))
        for i in range(n_frames):
            angular_accelerations[i] = pr.random_compact_axis_angle(rng)
        # Integrate angular accelerations to velocities
        angular_velocities = np.vstack(
            (np.zeros((1, 3)), np.cumsum(angular_accelerations * dt, axis=0)))
        # Integrate angular velocities to quaternions
        Q = pr.quaternion_integrate(angular_velocities, q0=start, dt=dt)

        fig = plt.figure(figsize=(4, 3))

        ax = fig.add_subplot(111, projection="3d")
        ax.set_xlim((-1, 1))
        ax.set_ylim((-1, 1))
        ax.set_zlim((-1, 1))
        ax.set_xlabel("X")
        ax.set_ylabel("Y")
        ax.set_zlabel("Z")

        R = pr.matrix_from_quaternion(start)

        rot = [
            ax.plot([0, 1], [0, 0], [0, 0], c="r", lw=3)[0],
            ax.plot([0, 0], [0, 1], [0, 0], c="g", lw=3)[0],
            ax.plot([0, 0], [0, 0], [0, 1], c="b", lw=3)[0],

            ax.plot([0, R[0, 0]], [0, R[1, 0]], [0, R[2, 0]],
                    c="r", lw=3, alpha=0.3)[0],
            ax.plot([0, R[0, 1]], [0, R[1, 1]], [0, R[2, 1]],
                    c="g", lw=3, alpha=0.3)[0],
            ax.plot([0, R[0, 2]], [0, R[1, 2]], [0, R[2, 2]],
                    c="b", lw=3, alpha=0.3)[0]
        ]

        anim = animation.FuncAnimation(fig, update_lines, n_frames,
                                       fargs=(Q, rot),
                                       interval=10, blit=False)

        plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.867 seconds)


.. _sphx_glr_download__auto_examples_animations_animate_quaternion_integration.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: animate_quaternion_integration.ipynb <animate_quaternion_integration.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: animate_quaternion_integration.py <animate_quaternion_integration.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: animate_quaternion_integration.zip <animate_quaternion_integration.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
