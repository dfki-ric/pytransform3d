
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/animations/animate_camera.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_animations_animate_camera.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_animations_animate_camera.py:


==============
Animate Camera
==============

Animate a camera moving along a circular trajectory while looking at a target.

.. GENERATED FROM PYTHON SOURCE LINES 8-58



.. video:: /_auto_examples/animations/images/sphx_glr_animate_camera_001.gif
   :class: sphx-glr-single-img
   :height: 500
   :width: 500
   :autoplay:
   :loop:






.. code-block:: Python

    import matplotlib.pyplot as plt
    import matplotlib.animation as animation
    import numpy as np

    from pytransform3d.rotations import matrix_from_euler
    from pytransform3d.transformations import transform_from
    from pytransform3d.plot_utils import Frame, Camera, make_3d_axis


    def update_camera(step, n_frames, camera):
        phi = 2 * np.pi * step / n_frames
        tf = transform_from(
            matrix_from_euler([-0.5 * np.pi, phi, 0], 0, 1, 2, False),
            -10 * np.array([np.sin(phi), np.cos(phi), 0]),
        )
        camera.set_data(tf)
        return camera


    if __name__ == "__main__":
        n_frames = 50

        fig = plt.figure(figsize=(5, 5))
        ax = make_3d_axis(15)

        frame = Frame(np.eye(4), label="target", s=3, draw_label_indicator=False)
        frame.add_frame(ax)

        fl = 3000  # [pixels]
        w, h = 1920, 1080  # [pixels]
        M = np.array(((fl, 0, w // 2), (0, fl, h // 2), (0, 0, 1)))
        camera = Camera(
            M,
            np.eye(4),
            virtual_image_distance=5,
            sensor_size=(w, h),
            c="c",
        )
        camera.add_camera(ax)

        anim = animation.FuncAnimation(
            fig,
            update_camera,
            n_frames,
            fargs=(n_frames, camera),
            interval=50,
            blit=False,
        )

        plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.249 seconds)


.. _sphx_glr_download__auto_examples_animations_animate_camera.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: animate_camera.ipynb <animate_camera.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: animate_camera.py <animate_camera.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: animate_camera.zip <animate_camera.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
