
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/plots/plot_spheres.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_plots_plot_spheres.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_plots_plot_spheres.py:


=====================
Plot Multiple Spheres
=====================

Benchmarks plotting of multiple spheres at once and compares it to plotting
each sphere individually.

.. GENERATED FROM PYTHON SOURCE LINES 9-39



.. image-sg:: /_auto_examples/plots/images/sphx_glr_plot_spheres_001.png
   :alt: plot spheres
   :srcset: /_auto_examples/plots/images/sphx_glr_plot_spheres_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    n_spheres       single                  multi                   speedup
    50              0.10562419891357422     0.0750741958618164      1.4069308062651644






|

.. code-block:: Python

    import numpy as np
    import matplotlib.pyplot as plt
    from pytransform3d.plot_utils import plot_sphere, plot_spheres
    import time


    n_spheres = 50
    random_state = np.random.default_rng(0)
    P = 2 * random_state.random((n_spheres, 3)) - 1
    radii = random_state.random(n_spheres) / 2
    colors = random_state.random((n_spheres, 3))
    alphas = random_state.random(n_spheres)

    start = time.time()
    plot_spheres(p=P, radius=radii, color=colors, alpha=alphas, wireframe=False)
    end = time.time()
    time_multi = end - start

    start = time.time()
    for p, radius, color, alpha in zip(P, radii, colors, alphas):
        plot_sphere(p=p, radius=radius, color=color, alpha=alpha, wireframe=False)
    end = time.time()
    time_single = end - start

    speedup = time_single / time_multi

    print("n_spheres", "single", "\t", "multi", "\t", "speedup", sep="\t")
    print(n_spheres, "", time_single, time_multi, speedup, sep="\t")

    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.167 seconds)


.. _sphx_glr_download__auto_examples_plots_plot_spheres.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_spheres.ipynb <plot_spheres.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_spheres.py <plot_spheres.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_spheres.zip <plot_spheres.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
