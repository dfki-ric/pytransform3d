
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/plots/plot_sample_rotations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_plots_plot_sample_rotations.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_plots_plot_sample_rotations.py:


=================================
Compare Rotation Sampling Methods
=================================

There are different ways of sampling rotations. We draw random samples of
rotations, convert them to rotation matrices, and apply these to the basis
vector (1, 0, 0) to obtain points on the unit sphere.

.. GENERATED FROM PYTHON SOURCE LINES 10-44



.. image-sg:: /_auto_examples/plots/images/sphx_glr_plot_sample_rotations_001.png
   :alt: Sampled rotation vectors (axis-angle), Sampled quaternions
   :srcset: /_auto_examples/plots/images/sphx_glr_plot_sample_rotations_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import pytransform3d.batch_rotations as pbr
    import pytransform3d.plot_utils as ppu
    import pytransform3d.rotations as pr

    rng = np.random.default_rng(1223532)
    n_samples = 2000
    v = np.array([1.0, 0.0, 0.0])

    plt.figure(figsize=(9, 5))

    ax1 = plt.subplot(121, projection="3d")
    ax1.set_title("Sampled rotation vectors (axis-angle)")
    ppu.plot_sphere(ax1, radius=1, n_steps=100)
    rotations = np.vstack(
        [pr.random_compact_axis_angle(rng) for _ in range(n_samples)]
    )
    R = pbr.matrices_from_compact_axis_angles(rotations)
    v_R = np.einsum("nij,j->ni", R, v)
    ax1.scatter(v_R[:, 0], v_R[:, 1], v_R[:, 2])

    ax2 = plt.subplot(122, projection="3d")
    ax2.set_title("Sampled quaternions")
    ppu.plot_sphere(ax2, radius=1, n_steps=100)
    rotations = np.vstack([pr.random_quaternion(rng) for _ in range(n_samples)])
    R = pbr.matrices_from_quaternions(rotations)
    v_R = np.einsum("nij,j->ni", R, v)
    ax2.scatter(v_R[:, 0], v_R[:, 1], v_R[:, 2])

    plt.tight_layout()
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.361 seconds)


.. _sphx_glr_download__auto_examples_plots_plot_sample_rotations.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sample_rotations.ipynb <plot_sample_rotations.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sample_rotations.py <plot_sample_rotations.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_sample_rotations.zip <plot_sample_rotations.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
