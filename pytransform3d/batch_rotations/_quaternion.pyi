import numpy as np
import numpy.typing as npt
from typing import Union, AnyStr

def smooth_quaternion_trajectory(
    Q: npt.ArrayLike, start_component_positive: AnyStr = ...
) -> np.ndarray: ...
def batch_concatenate_quaternions(
    Q1: npt.ArrayLike, Q2: npt.ArrayLike, out: Union[np.ndarray, None] = ...
) -> np.ndarray: ...
def batch_q_conj(Q: npt.ArrayLike) -> np.ndarray: ...
def quaternion_slerp_batch(
    start: npt.ArrayLike,
    end: npt.ArrayLike,
    t: npt.ArrayLike,
    shortest_path: bool = ...,
) -> np.ndarray: ...
def axis_angles_from_quaternions(qs: npt.ArrayLike) -> np.ndarray: ...
def matrices_from_quaternions(
    Q: npt.ArrayLike,
    normalize_quaternions: bool = ...,
    out: Union[np.ndarray, None] = ...,
) -> np.ndarray: ...
def batch_quaternion_wxyz_from_xyzw(
    Q_xyzw: npt.ArrayLike, out: Union[np.ndarray, None] = ...
) -> np.ndarray: ...
def batch_quaternion_xyzw_from_wxyz(
    Q_wxyz: npt.ArrayLike, out: Union[np.ndarray, None] = ...
) -> np.ndarray: ...
